✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
 * Serving Flask app 'api_server'
 * Debug mode: on
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.0.178:5001
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 10:26:41] "[33mGET /api/version HTTP/1.1[0m" 404 -
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/utils/api_response.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/utils/api_response.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 10:37:33] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/api/qr_generation.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/api/qr_generation.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/api/qr_generation.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/api/qr_generation.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:04] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:17] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:17] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:27] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 17 wyników
✅ Znaleziono 50 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:39] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:12:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:22] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:22] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:28] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:38] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:42] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:13:56] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:14:11] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:14:23] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 17 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:14:36] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:16:02] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:16:02] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:16:09] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:32:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:32:53] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:13] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:43] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:33:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:34:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:34:13] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:34:26] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:34:36] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:34:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:35:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:36:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/api/unified_start_api.py', reloading
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:37:25] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/unified_start_manager.py', reloading
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:38:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:39:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:40:00] "GET /api/unified/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:40:12] "GET /api/unified/group-details/Junior%20B/M HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:40:34] "GET /api/unified/health HTTP/1.1" 200 -
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior B', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (54,)
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:40:52] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:02] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:12] "GET /api/unified/group-details/Junior%20C/K HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:19] "POST /api/unified/remove-athlete-from-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:22] "GET /api/unified/group-details/Junior%20C/K HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior C', 'K')
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior C', 'K')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:41:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:16] "GET /api/unified/group-details/Masters/M HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (61,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:42:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:43:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:44:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:45:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:46:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:47:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:48:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:49:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:50:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:51:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:52:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:53:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:53:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:53:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:53:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:53:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:54:02] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:54:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:54:55] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:05] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:15] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:43] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:55:59] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:56:30] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:57:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:57:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:57:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:58:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 12:59:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:00:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:01:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:02:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:03:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:04:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:27] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:44] "[31m[1mPOST /api/unified/delete-group HTTP/1.1[0m" 400 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:56] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:05:59] "[31m[1mPOST /api/unified/delete-group HTTP/1.1[0m" 400 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:07] "POST /api/unified/delete-group HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, COALESCE(checked_in, false) as checked_in
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior B', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, COALESCE(checked_in, false) as checked_in
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, COALESCE(checked_in, false) as checked_in
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior D', 'K')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT r.nr_startowy, z.imie, z.nazwisko, s.nazwa as session_name
                FROM sectro_results r
                JOIN sectro_sessions s ON r.session_id = s.id
                JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
                WHERE z.kategoria = %s AND z.plec = %s
                AND s.status IN ('active', 'timing')
                AND r.start_time IS NOT NULL AND r.finish_time IS NULL
             z parametrami: ('Junior D', 'K')
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:18] "POST /api/unified/delete-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:20] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, COALESCE(checked_in, false) as checked_in
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior C', 'K')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT r.nr_startowy, z.imie, z.nazwisko, s.nazwa as session_name
                FROM sectro_results r
                JOIN sectro_sessions s ON r.session_id = s.id
                JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
                WHERE z.kategoria = %s AND z.plec = %s
                AND s.status IN ('active', 'timing')
                AND r.start_time IS NOT NULL AND r.finish_time IS NULL
             z parametrami: ('Junior C', 'K')
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:21] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:41] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:06:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:01] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:11] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:21] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:41] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:07:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:01] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:11] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:21] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:41] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 2 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:51] "[31m[1mPOST /api/unified/register-athlete HTTP/1.1[0m" 400 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:58] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:08:58] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:04] "GET /api/zawodnicy/22 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:08] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:14] "GET /api/zawodnicy/33 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:18] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:28] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:38] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:48] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:09:58] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:10:13] "GET /api/unified/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:10:22] "GET /api/unified/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:10:26] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:10:48] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:10:57] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:11:09] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:11:32] "GET /api/qr/dashboard HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 17 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:11:40] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:12:42] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:13:59] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:13:59] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:09] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:19] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:29] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:39] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:49] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:14:59] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:15:32] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:15:40] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:15:53] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:16:52] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:13] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:17] "GET /api/zawodnicy/22 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:23] "GET /api/kluby HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:23] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:24] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:26] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:26] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:31] "GET /api/zawodnicy/44 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:36] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:40] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:40] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:47] "GET /api/drabinka HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:55] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:59] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:17:59] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:04] "GET /api/zawodnicy/11 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:09] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:12] "GET /api/zawodnicy/222 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 50 wyników
❌ Błąd podczas wykonywania zapytania: SSL connection has been closed unexpectedly

❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
            SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                   NULL as czas_przejazdu_s, 'WAITING' as status
            FROM zawodnicy
            WHERE kategoria IS NOT NULL AND plec IS NOT NULL
            ORDER BY kategoria, plec, nr_startowy ASC
        
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:19] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:25] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:28] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:55] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:18:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:25] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:48] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:19:55] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:20:02] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:20:25] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:20:26] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:20:46] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:20:55] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:21:01] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:21:43] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:21:44] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
❌ Błąd podczas wykonywania zapytania: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:21:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:05] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:13] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:19] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:43] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:22:54] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:13] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:43] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:23:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:13] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:43] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:24:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:13] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:43] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:25:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:13] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:23] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:43] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:26:53] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:08] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:13] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:16] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:24] "GET /api/zawodnicy/25 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:46] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:27:49] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:28:11] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:28:45] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:28:48] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:28:56] "GET /api/zawodnicy/2 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:29] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:30] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:40] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:42] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:42] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:49] "GET /api/zawodnicy/44 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:52] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:58] "GET /api/zawodnicy/2 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:29:59] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:02] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:06] "GET /api/zawodnicy/3 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:07] "GET /api/zawodnicy/33 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:12] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:22] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:29] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:32] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:42] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:52] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:30:59] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:31:02] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:31:12] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:31:25] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:31:29] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:31:43] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:00] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:06] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:21] "GET /api/zawodnicy/33 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:41] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:41] "GET /api/qr/dashboard HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:42] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:42] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:32:52] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:02] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:11] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:12] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:22] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:35] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:38] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:38] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:41] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:43] "GET /api/zawodnicy/34 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:48] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:33:58] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:08] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:11] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:18] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:28] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:38] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:41] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:44] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:34:54] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:11] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:20] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:20] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:30] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:40] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:41] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:35:50] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:00] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:10] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:11] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:20] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:32] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:50] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:36:57] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:37:15] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:37:45] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:37:50] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:38:00] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:38:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:39:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:39:10] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:39:11] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:39:32] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:40:49] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:40:52] "GET /api/qr/dashboard HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:40:52] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:07] "GET /api/qr/manual-checkins HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT 10
    
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
❌ Błąd podczas wykonywania zapytania: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code,
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        WHERE COALESCE(checked_in, false) = false
        ORDER BY nr_startowy
        LIMIT 50
    
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
✅ Znaleziono 50 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:21] "GET /api/zawodnicy/34 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:41:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:42:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:42:12] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:43:32] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:43:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:32] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 50 wyników
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:38] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:44:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:01] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:33] "GET /api/zawodnicy HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:45:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:23] "GET /api/kluby HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:24] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:24] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:24] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:29] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:29] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:29] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 50 wyników
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 50 wyników
❌ Błąd podczas wykonywania zapytania: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:39] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:39] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:40] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:40] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:40] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:41] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:46:51] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:01] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:11] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:21] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:41] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:47:56] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:49:06] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:49:19] "[33mGET /api/qr/generate-bulk HTTP/1.1[0m" 404 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:49:25] "[33mGET /api/qr/generate-bulk HTTP/1.1[0m" 404 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:49:45] "POST /api/qr/bulk-generate HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:50:12] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:51:09] "GET /api/zawodnicy?page=1&limit=10 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:51:32] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (10, 0)
✅ Znaleziono 10 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:03] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:05] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:08] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:12] "GET /api/unified/group-details/Masters/M HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:16] "POST /api/unified/remove-athlete-from-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:17] "GET /api/unified/group-details/Masters/M HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (61,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'M')
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (61,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:20] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:30] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:31] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:33] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:33] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:33] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:34] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:42] "GET /api/zawodnicy/35 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 18 wyników
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 3 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:48] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:49] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:50] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:50] "GET /api/zawodnicy/35 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:54] "GET /api/zawodnicy/33 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:52:58] "GET /api/zawodnicy/32 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:04] "POST /api/unified/register-athlete HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 18 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 4 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 19 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:05] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:05] "GET /api/zawodnicy/32 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:53:18] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:57:09] "GET /api/zawodnicy HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:57:22] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:57:37] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:25] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:29] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:31] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:41] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:45] "GET /api/rankings/individual?season=2025&_t=1750766384990 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM punkty_zawodnikow
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
✅ Znaleziono 187 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:45] "GET /api/rankings/clubs/top3?season=2025&_t=1750766384991 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:45] "GET /api/rankings/medals?season=2025&_t=1750766384991 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:45] "GET /api/rankings/clubs/total?season=2025&_t=1750766384990 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        ),
        top3_per_category AS (
            SELECT 
                klub, kategoria, plec, punkty
            FROM punkty_zawodnikow
            WHERE ranking_w_kategorii <= 3
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_top3,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM top3_per_category
        GROUP BY klub
        ORDER BY punkty_top3 DESC, aktywne_kategorie DESC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        ),
        ranked AS (
            SELECT *,
                ROW_NUMBER() OVER (PARTITION BY nr_startowy ORDER BY punkty DESC) as rn,
                COUNT(*) OVER (PARTITION BY nr_startowy) as total
            FROM punkty_zawodnikow
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM ranked
        WHERE (total <= 2 OR rn <= total - 2)
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        medale AS (
            SELECT 
                klub,
                SUM(CASE WHEN pozycja = 1 THEN 1 ELSE 0 END) as zlote,
                SUM(CASE WHEN pozycja = 2 THEN 1 ELSE 0 END) as srebrne,
                SUM(CASE WHEN pozycja = 3 THEN 1 ELSE 0 END) as brazowe
            FROM wyniki_z_pozycjami
            WHERE pozycja <= 3
            GROUP BY klub
        )
        SELECT 
            klub,
            zlote,
            srebrne,
            brazowe,
            (zlote + srebrne + brazowe) as lacznie
        FROM medale
        ORDER BY zlote DESC, srebrne DESC, brazowe DESC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_total,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM punkty_zawodnikow
        GROUP BY klub
        ORDER BY punkty_total DESC, aktywne_kategorie DESC
    
✅ Znaleziono 13 wyników
✅ Znaleziono 13 wyników
✅ Znaleziono 13 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:45] "GET /api/rankings/general?season=2025&_t=1750766384990 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:48] "GET /api/drabinka HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 13:59:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:00:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:00:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:01:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:01:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:02:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:02:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:03:59] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:04:52] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:06:12] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:07:32] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:08:52] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:10:12] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:11:32] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:12:52] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:14:12] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:15:32] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 14:16:52] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:02:54] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
✅ Znaleziono 187 wyników
🔍 Wykonuję zapytanie: 
            SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                   NULL as czas_przejazdu_s, 'WAITING' as status
            FROM zawodnicy
            WHERE kategoria IS NOT NULL AND plec IS NOT NULL
            ORDER BY kategoria, plec, nr_startowy ASC
        
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
❌ Błąd w get_one: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:04] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:12] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:24] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:24] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:28] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:03:54] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
❌ Błąd podczas wykonywania zapytania: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:10] "GET /api/zawodnicy/2 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:11] "GET /api/zawodnicy/24 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:16] "POST /api/unified/register-athlete HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:17] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:17] "GET /api/zawodnicy/24 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 5 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 20 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:24] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:30] "GET /api/drabinka HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:37] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:37] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:54] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:04:54] "GET /api/sectro/sessions/66/results HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
            SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                   NULL as czas_przejazdu_s, 'WAITING' as status
            FROM zawodnicy
            WHERE kategoria IS NOT NULL AND plec IS NOT NULL
            ORDER BY kategoria, plec, nr_startowy ASC
        
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: SELECT DISTINCT klub FROM zawodnicy WHERE klub IS NOT NULL ORDER BY klub
✅ Znaleziono 14 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (50, 0)
✅ Znaleziono 50 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
❌ Błąd w get_one: SSL connection has been closed unexpectedly

🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (66,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:24] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:34] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:05:54] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:06:04] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:06:16] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:06:31] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:06:43] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:06:56] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:07:30] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:07:52] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:08:36] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:08:46] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:08:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:05] "POST /api/unified/activate-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:06] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'K')
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:08] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:15] "POST /api/unified/activate-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:15] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior D', 'K')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:28] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:52] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:09:55] "[33mGET /api/version HTTP/1.1[0m" 404 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:10:06] "GET /api/unified/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:10:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:10:43] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:10:50] "GET /api/unified/groups HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:11:05] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:12:14] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:12:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:14:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:15:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:16:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:18:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:19:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:20:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:21:47] "[31m[1mPOST /api/unified/activate-group HTTP/1.1[0m" 400 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:22:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:22:21] "POST /api/unified/deactivate-group HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:23:08] "GET /api/unified/groups HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:23:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:24:53] "POST /api/unified/activate-group HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: (None, None)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior A', 'M')
✅ Znaleziono 1 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:24:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:26:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug: * Detected change in '/Users/mariusz/drabinka-turniejowa/backend/unified_start_manager.py', reloading
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🧹 Connection pool zamknięty przy shutdown
🧹 Connection pool zamknięty przy shutdown
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 518-353-881
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:27:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:27:56] "GET /api/unified/groups HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:28:07] "GET /api/unified/health HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:28:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:29:26] "GET /api/unified/groups HTTP/1.1" 200 -
✅ Connection pool zainicjalizowany (1-15 połączeń)
✅ Connection pool zainicjalizowany (1-15 połączeń)
🎯 SKATECROSS QR - Połączenie z Supabase PostgreSQL: SUKCES!
👤 SKATECROSS QR - Moduł Zawodników załadowany z Supabase PostgreSQL
🔲 SKATECROSS QR - Moduł QR Generation załadowany z Supabase PostgreSQL
🏁 SKATECROSS QR - Moduł Centrum Startu załadowany z Supabase PostgreSQL
🏁 SKATECROSS v36.0 - Centrum Startu v2.0 z integracją SECTRO załadowany!
🔄 SKATECROSS QR - Unified Start Manager załadowany
🔄 SKATECROSS QR - Unified Start API Blueprint załadowany
📦 SKATECROSS QR - API Module Init loaded
🔗 Rejestruję blueprinty SKATECROSS...
✅ Blueprinty SKATECROSS zarejestrowane:
   👤 zawodnicy_bp - /api/zawodnicy/*
   🔲 qr_generation_bp - /api/qr/*
   🏁 centrum_startu_bp - /api/grupy-startowe, /api/scan-qr, /api/grupa-aktywna, /api/start-queue
   🏁 centrum_startu_v2_bp - /api/v2/* (NOWA WERSJA Z SECTRO)
   🚀 unified_bp - /api/unified/* (UNIFIED START CONTROL)
   📊 rankingi_bp - /api/rankings/*
   🏆 drabinka_bp - /api/drabinka
   📈 statystyki_bp - /api/kluby, /api/statystyki, /api/kategorie
   🏅 wyniki_bp - /api/wyniki
   ℹ️ version endpoint - /api/version
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:11] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:16] "[31m[1mPOST /api/unified/activate-group HTTP/1.1[0m" 400 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:22] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:24] "GET /api/unified/group-details/Junior%20B/M HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:31] "[31m[1mPOST /api/unified/activate-group HTTP/1.1[0m" 400 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: (None, None)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Junior B', 'M')
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (54,)
✅ Znaleziono 3 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: (None, None)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:37] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:43] "GET /api/unified/group-details/Masters/K HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:47] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE kategoria = %s AND plec = %s AND COALESCE(checked_in, false) = true
                ORDER BY nr_startowy
             z parametrami: ('Masters', 'K')
✅ Znaleziono 2 wyników
🔍 Wykonuję zapytanie: 
                    SELECT r.nr_startowy, r.status, r.start_time, r.finish_time, r.total_time
                    FROM sectro_results r
                    WHERE r.session_id = %s
                    ORDER BY r.nr_startowy
                 z parametrami: (67,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:30:57] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:31:07] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:31:22] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:31:35] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:32:13] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:32:35] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:33:45] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:34:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:35:20] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:35:30] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:35:44] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:36:06] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:36:39] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:37:52] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:38:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:39:39] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:40:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:41:57] "GET /api/unified/groups HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:42:18] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:43:38] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:44:58] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:46] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:47] "GET /api/rankings/general?season=2025&_t=1750776347157 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        ),
        ranked AS (
            SELECT *,
                ROW_NUMBER() OVER (PARTITION BY nr_startowy ORDER BY punkty DESC) as rn,
                COUNT(*) OVER (PARTITION BY nr_startowy) as total
            FROM punkty_zawodnikow
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM ranked
        WHERE (total <= 2 OR rn <= total - 2)
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
✅ Znaleziono 187 wyników
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM punkty_zawodnikow
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:47] "GET /api/rankings/clubs/total?season=2025&_t=1750776347157 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:47] "GET /api/rankings/medals?season=2025&_t=1750776347157 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:47] "GET /api/rankings/clubs/top3?season=2025&_t=1750776347157 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:47] "GET /api/rankings/individual?season=2025&_t=1750776347156 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:50] "GET /api/drabinka HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_total,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM punkty_zawodnikow
        GROUP BY klub
        ORDER BY punkty_total DESC, aktywne_kategorie DESC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        medale AS (
            SELECT 
                klub,
                SUM(CASE WHEN pozycja = 1 THEN 1 ELSE 0 END) as zlote,
                SUM(CASE WHEN pozycja = 2 THEN 1 ELSE 0 END) as srebrne,
                SUM(CASE WHEN pozycja = 3 THEN 1 ELSE 0 END) as brazowe
            FROM wyniki_z_pozycjami
            WHERE pozycja <= 3
            GROUP BY klub
        )
        SELECT 
            klub,
            zlote,
            srebrne,
            brazowe,
            (zlote + srebrne + brazowe) as lacznie
        FROM medale
        ORDER BY zlote DESC, srebrne DESC, brazowe DESC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        ),
        top3_per_category AS (
            SELECT 
                klub, kategoria, plec, punkty
            FROM punkty_zawodnikow
            WHERE ranking_w_kategorii <= 3
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_top3,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM top3_per_category
        GROUP BY klub
        ORDER BY punkty_top3 DESC, aktywne_kategorie DESC
    
✅ Znaleziono 13 wyników
✅ Znaleziono 13 wyników
✅ Znaleziono 13 wyników
✅ Znaleziono 187 wyników
🔍 Wykonuję zapytanie: 
            SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub,
                   NULL as czas_przejazdu_s, 'WAITING' as status
            FROM zawodnicy
            WHERE kategoria IS NOT NULL AND plec IS NOT NULL
            ORDER BY kategoria, plec, nr_startowy ASC
        
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:58] "GET /api/rankings/clubs/total?season=2025&_t=1750776357989 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_total,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM punkty_zawodnikow
        GROUP BY klub
        ORDER BY punkty_total DESC, aktywne_kategorie DESC
    
✅ Znaleziono 13 wyników
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        ),
        ranked AS (
            SELECT *,
                ROW_NUMBER() OVER (PARTITION BY nr_startowy ORDER BY punkty DESC) as rn,
                COUNT(*) OVER (PARTITION BY nr_startowy) as total
            FROM punkty_zawodnikow
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM ranked
        WHERE (total <= 2 OR rn <= total - 2)
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                nr_startowy, imie, nazwisko, kategoria, plec, klub,
                pozycja,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                czas_przejazdu_s
            FROM wyniki_z_pozycjami
        )
        SELECT 
            nr_startowy, imie, nazwisko, kategoria, plec, klub,
            SUM(punkty) as punkty,
            COUNT(*) as liczba_zawodow,
            MIN(czas_przejazdu_s) as najlepszy_czas
        FROM punkty_zawodnikow
        GROUP BY nr_startowy, imie, nazwisko, kategoria, plec, klub
        ORDER BY punkty DESC, najlepszy_czas ASC
    
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        medale AS (
            SELECT 
                klub,
                SUM(CASE WHEN pozycja = 1 THEN 1 ELSE 0 END) as zlote,
                SUM(CASE WHEN pozycja = 2 THEN 1 ELSE 0 END) as srebrne,
                SUM(CASE WHEN pozycja = 3 THEN 1 ELSE 0 END) as brazowe
            FROM wyniki_z_pozycjami
            WHERE pozycja <= 3
            GROUP BY klub
        )
        SELECT 
            klub,
            zlote,
            srebrne,
            brazowe,
            (zlote + srebrne + brazowe) as lacznie
        FROM medale
        ORDER BY zlote DESC, srebrne DESC, brazowe DESC
    
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:58] "GET /api/rankings/medals?season=2025&_t=1750776357989 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:58] "GET /api/rankings/clubs/top3?season=2025&_t=1750776357989 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:58] "GET /api/rankings/general?season=2025&_t=1750776357989 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:58] "GET /api/rankings/individual?season=2025&_t=1750776357988 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:59] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:45:59] "GET /api/sectro/sessions/68/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:05] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
        WITH wyniki_z_pozycjami AS (
            SELECT 
                w.nr_startowy,
                z.imie, z.nazwisko, z.kategoria, z.plec, z.klub,
                ROW_NUMBER() OVER (
                    PARTITION BY z.kategoria, z.plec 
                    ORDER BY w.czas_przejazdu_s ASC
                ) as pozycja,
                w.czas_przejazdu_s
            FROM wyniki w
            JOIN zawodnicy z ON w.nr_startowy = z.nr_startowy
            WHERE w.status = 'FINISHED' 
                AND w.czas_przejazdu_s IS NOT NULL
                AND z.klub IS NOT NULL
        ),
        punkty_zawodnikow AS (
            SELECT 
                klub, kategoria, plec, nr_startowy,
                CASE 
                    WHEN pozycja <= 32 THEN 
                        CASE pozycja
                            WHEN 1 THEN 100 WHEN 2 THEN 80 WHEN 3 THEN 60 WHEN 4 THEN 50
                            WHEN 5 THEN 45 WHEN 6 THEN 40 WHEN 7 THEN 36 WHEN 8 THEN 32
                            WHEN 9 THEN 29 WHEN 10 THEN 26 WHEN 11 THEN 24 WHEN 12 THEN 22
                            WHEN 13 THEN 20 WHEN 14 THEN 18 WHEN 15 THEN 16 WHEN 16 THEN 15
                            WHEN 17 THEN 14 WHEN 18 THEN 13 WHEN 19 THEN 12 WHEN 20 THEN 11
                            WHEN 21 THEN 10 WHEN 22 THEN 9 WHEN 23 THEN 8 WHEN 24 THEN 7
                            WHEN 25 THEN 6 WHEN 26 THEN 5 WHEN 27 THEN 4 WHEN 28 THEN 3
                            WHEN 29 THEN 2 WHEN 30 THEN 1 WHEN 31 THEN 1 WHEN 32 THEN 1
                            ELSE 0
                        END
                    ELSE 0
                END as punkty,
                ROW_NUMBER() OVER (
                    PARTITION BY klub, kategoria, plec 
                    ORDER BY pozycja ASC
                ) as ranking_w_kategorii
            FROM wyniki_z_pozycjami
        ),
        top3_per_category AS (
            SELECT 
                klub, kategoria, plec, punkty
            FROM punkty_zawodnikow
            WHERE ranking_w_kategorii <= 3
        )
        SELECT 
            klub,
            SUM(punkty) as punkty_top3,
            COUNT(DISTINCT CONCAT(kategoria, '_', plec)) as aktywne_kategorie,
            ROUND(AVG(punkty), 1) as balance
        FROM top3_per_category
        GROUP BY klub
        ORDER BY punkty_top3 DESC, aktywne_kategorie DESC
    
✅ Znaleziono 13 wyników
✅ Znaleziono 13 wyników
✅ Znaleziono 187 wyników
✅ Znaleziono 187 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
            SELECT r.*, z.imie, z.nazwisko, z.kategoria, z.plec, z.klub
            FROM sectro_results r
            LEFT JOIN zawodnicy z ON r.nr_startowy = z.nr_startowy
            WHERE r.session_id = %s
            ORDER BY r.total_time ASC
         z parametrami: (68,)
ℹ️ Zapytanie nie zwróciło żadnych wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:10] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:13] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:43] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:46:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:47:13] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:47:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:47:43] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:47:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:48:13] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:48:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:48:43] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:48:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:49:13] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:50:17] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:51:37] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:52:57] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:27] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
🔍 Wykonuję zapytanie: 
                SELECT 
                    z.nr_startowy,
                    z.imie,
                    z.nazwisko, 
                    z.kategoria,
                    z.plec,
                    z.klub,
                    z.checked_in,
                    z.check_in_time,
                    
                    -- SECTRO data
                    s.id as session_id,
                    s.nazwa as session_name,
                    s.status as session_status,
                    r.status as sectro_status,
                    r.start_time,
                    r.finish_time,
                    r.total_time,
                    
                    -- Unified status calculation
                    CASE 
                        WHEN r.total_time IS NOT NULL THEN 'FINISHED'
                        WHEN r.start_time IS NOT NULL THEN 'TIMING' 
                        WHEN r.session_id IS NOT NULL THEN 'READY'
                        WHEN z.checked_in = true THEN 'REGISTERED'
                        ELSE 'WAITING'
                    END as unified_status,
                    
                    -- Source type
                    CASE
                        WHEN s.status IN ('active', 'timing') THEN 'SECTRO_ACTIVE'
                        WHEN z.checked_in = true THEN 'CHECKED_IN'
                        ELSE 'MANUAL'
                    END as source_type,
                    
                    -- Priority for sorting
                    CASE 
                        WHEN r.start_time IS NOT NULL AND r.finish_time IS NULL THEN 1  -- Currently timing
                        WHEN s.status = 'active' AND r.session_id IS NOT NULL THEN 2   -- Ready in active session
                        WHEN z.checked_in = true THEN 3                                -- Checked in
                        ELSE 4                                                          -- Others
                    END as priority
                    
                FROM zawodnicy z
                LEFT JOIN sectro_results r ON z.nr_startowy = r.nr_startowy
                LEFT JOIN sectro_sessions s ON r.session_id = s.id
                WHERE z.checked_in = true OR r.session_id IS NOT NULL
                ORDER BY priority ASC, s.created_at DESC, r.start_time DESC, z.check_in_time DESC, z.nr_startowy ASC
            
✅ Znaleziono 21 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
        SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, qr_code, 
               COALESCE(checked_in, false) as checked_in
        FROM zawodnicy 
        ORDER BY nr_startowy 
        LIMIT %s OFFSET %s
     z parametrami: (1000, 0)
✅ Znaleziono 251 wyników
🔍 Wykonuję zapytanie: 
                SELECT nr_startowy, imie, nazwisko, kategoria, plec, klub, 
                       COALESCE(checked_in, false) as checked_in, check_in_time
                FROM zawodnicy 
                WHERE COALESCE(checked_in, false) = true 
                AND kategoria IS NOT NULL 
                AND plec IS NOT NULL
                ORDER BY kategoria, plec, nr_startowy
            
✅ Znaleziono 6 wyników
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:29] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:29] "GET /api/sectro/sessions/68/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:32] "GET /api/kluby HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:32] "GET /api/zawodnicy?page=1&limit=50 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:33] "GET /api/unified/dashboard-data HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:33] "GET /api/sectro/sessions/68/results HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:34] "GET /api/zawodnicy?limit=1000 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [24/Jun/2025 16:53:47] "[31m[1mPUT /api/zawodnicy/1 HTTP/1.1[0m" 405 -
